page.title=Publish Payload Processing
page.description=Widgets and services communiciate over a publication/subscription model. This page shows different ways in which different widgets can be configured to generate the payloads that will be published. In order to see what has been published you should select the "Pub/Sub Logging" tab.

example1.title=Basic Publication
example1.description=This shows a button configured with a really simple publication. Just a topic and a payload.

example2.title=Scoped Publication
example2.description=In this example the button is configured with a "pubSubScope". This is automatically prepended to the configured publishTopic. Click the button and view the "Pub/Sub Logging" tab to see this.

example3.title=Global Publication
example3.description=This example is almost exactly the same as the last. The difference is that even though a "pubSubScope" is configured, the "publishGlobal" assignment ensures that the publication is made at the global scope (i.e. the "pubSubScope" is NOT prepended).

example4.title=Parent Publication
example4.description=In this example the button is nested inside a layout widget. Both the button and the layout widget define their own "pubSubScope". By configuring the button to "publishToParent" the scope of the layout widget is used and NOT the scope of the button.

example5.title=Current Item payloads
example5.description=Publications can be configured with a "publishPayloadType" attribute. If not provided this will default to "CONFIGURED". In this example we are setting it to be "CURRENT_ITEM" which will result in whatever the published payload being the value of currentItem of the widget.

example6.title=Current Item Payloads in Context
example6.description=The CURRENT_ITEM "publishPayloadType" makes more sense in the context of a list where the same widget model is rendered multiple times. In this example we're hardcoding some list data that is then iterated over. A PropertyLink widget uses CURRENT_ITEM as the "publishPayloadType" by default. Click on both items and then view the "Pub/Sub Logging" tab to see how the published payload differ.

example7.title=Processed Payloads
example7.description=Arguably the most useful "publishPayloadType" is "PROCESS". This is used with the "publishPayloadModifiers" attribute that defines an array of modification functions that should be applied to the payload. The most common of these is "processCurrentItemTokens". This allows you to construct a payload with tokens to representing values within the currentItem. In this example the "value" of the currentItem is referenced within the "processedValue" attriute of the payload (note that you can use dot-notation to address values in the currentItem. View the "Pub/Sub Logging" tab to see the processed payload when the button is clicked. Other modifiers that are available include "processInstanceTokens", "processHashTokens", "processMessageTokens", "convertNodeRefToUrl" and "replaceColons" (with underscores). Try this out by updating the example model and generating a new preview.

example8.title=Set Current Item Processor
example8.description=One processor that can come in useful is the "setCurrentItem". This allows you to set the currentItem anywhere within the configured payload by using the "___AlfCurrentItem" string. This can be very useful when you need to build a slightly different payload structure.

example9.title=Current Item Mixin
example9.description=It is also possible to "mix" the currentItem into your configured publishPayload. This can be useful when you need to augment the currentItem with additional data. This is done by setting the "publishPayloadItemMixin" to be true.